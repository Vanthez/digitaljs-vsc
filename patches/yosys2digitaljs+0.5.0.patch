diff --git a/node_modules/yosys2digitaljs/dist/index.d.ts b/node_modules/yosys2digitaljs/dist/index.d.ts
index 3df198f..e44f83d 100644
--- a/node_modules/yosys2digitaljs/dist/index.d.ts
+++ b/node_modules/yosys2digitaljs/dist/index.d.ts
@@ -77,6 +77,7 @@ declare type LintMessage = {
 };
 export declare function verilator_lint(filenames: string[], dirname?: string, options?: Options): Promise<LintMessage[]>;
 export declare function process(filenames: string[], dirname?: string, options?: Options): Promise<Output>;
+export declare function custom_process_yosys_json(obj: any, options?: Options): Promise<any>;
 export declare function io_ui(output: Digitaljs.Module): void;
 export declare function process_files(data: {
     [key: string]: string;
diff --git a/node_modules/yosys2digitaljs/dist/index.js b/node_modules/yosys2digitaljs/dist/index.js
index c17a407..72e2c24 100644
--- a/node_modules/yosys2digitaljs/dist/index.js
+++ b/node_modules/yosys2digitaljs/dist/index.js
@@ -1,7 +1,7 @@
 #!/usr/bin/env node
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.process_sv = exports.process_files = exports.io_ui = exports.process = exports.verilator_lint = void 0;
+exports.process_sv = exports.process_files = exports.io_ui = exports.custom_process_yosys_json = exports.process = exports.verilator_lint = void 0;
 const tmp = require("tmp-promise");
 const child_process = require("child_process");
 const assert = require("assert");
@@ -1044,20 +1044,8 @@ async function process(filenames, dirname, options = {}) {
         }
         obj = JSON.parse(fs.readFileSync(tmpjson, 'utf8'));
         await (0, util_1.promisify)(fs.unlink)(tmpjson);
-        const portmaps = order_ports(obj);
-        const out = yosys_to_digitaljs(obj, portmaps, options);
-        const toporder = topsort(module_deps(obj));
-        toporder.pop();
-        const toplevel = toporder.pop();
-        const output = Object.assign({ subcircuits: {} }, out[toplevel]);
-        for (const x of toporder)
-            output.subcircuits[x] = out[x];
-        const ret = {
-            output: output,
-            yosys_output: obj,
-            yosys_stdout: yosys_result.stdout,
-            yosys_stderr: yosys_result.stderr
-        };
+        const yosys_json_ret = await custom_process_yosys_json(obj, options);
+        const ret = Object.assign(Object.assign({}, yosys_json_ret), { yosys_stdout: yosys_result.stdout, yosys_stderr: yosys_result.stderr });
         if (options.lint)
             ret.lint = await verilator_lint(filenames, dirname, options);
         return ret;
@@ -1071,6 +1059,21 @@ async function process(filenames, dirname, options = {}) {
     }
 }
 exports.process = process;
+async function custom_process_yosys_json(obj, options = {}) {
+    const portmaps = order_ports(obj);
+    const out = yosys_to_digitaljs(obj, portmaps, options);
+    const toporder = topsort(module_deps(obj));
+    toporder.pop();
+    const toplevel = toporder.pop();
+    const output = Object.assign({ subcircuits: {} }, out[toplevel]);
+    for (const x of toporder)
+        output.subcircuits[x] = out[x];
+    return {
+        output,
+        yosys_output: obj,
+    };
+}
+exports.custom_process_yosys_json = custom_process_yosys_json;
 function io_ui(output) {
     for (const [name, dev] of Object.entries(output.devices)) {
         if (dev.type == 'Input' || dev.type == 'Output') {
diff --git a/node_modules/yosys2digitaljs/src/index.ts b/node_modules/yosys2digitaljs/src/index.ts
index e4786a7..9ab2cfb 100644
--- a/node_modules/yosys2digitaljs/src/index.ts
+++ b/node_modules/yosys2digitaljs/src/index.ts
@@ -1198,16 +1198,9 @@ export async function process(filenames: string[], dirname?: string, options: Op
         }
         obj = JSON.parse(fs.readFileSync(tmpjson, 'utf8'));
         await promisify(fs.unlink)(tmpjson);
-        const portmaps = order_ports(obj);
-        const out = yosys_to_digitaljs(obj, portmaps, options);
-        const toporder = topsort(module_deps(obj));
-        toporder.pop();
-        const toplevel = toporder.pop();
-        const output: Digitaljs.TopModule = { subcircuits: {}, ... out[toplevel] };
-        for (const x of toporder) output.subcircuits[x] = out[x];
+        const yosys_json_ret = await custom_process_yosys_json(obj, options);
         const ret: Output = {
-            output: output,
-            yosys_output: obj,
+            ...yosys_json_ret,
             yosys_stdout: yosys_result.stdout,
             yosys_stderr: yosys_result.stderr
         };
@@ -1222,6 +1215,20 @@ export async function process(filenames: string[], dirname?: string, options: Op
     }
 }
 
+export async function custom_process_yosys_json(obj: any, options: Options = {}): Promise<any> {
+    const portmaps = order_ports(obj);
+    const out = yosys_to_digitaljs(obj, portmaps, options);
+    const toporder = topsort(module_deps(obj));
+    toporder.pop();
+    const toplevel = toporder.pop();
+    const output: Digitaljs.TopModule = { subcircuits: {}, ... out[toplevel] };
+    for (const x of toporder) output.subcircuits[x] = out[x];
+    return {
+        output,
+        yosys_output: obj,
+    };
+}
+
 export function io_ui(output: Digitaljs.Module) {
     for (const [name, dev] of Object.entries(output.devices)) {
         if (dev.type == 'Input' || dev.type == 'Output') {
